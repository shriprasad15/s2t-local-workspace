{
  "openapi": "3.1.0",
  "info": {
    "title": "ETL AI Agent API",
    "description": "Natural language interface for ETL operations",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/error": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Error",
        "operationId": "error_api_v1_error_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/ping": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Ping",
        "operationId": "ping_api_v1_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sse": {
      "get": {
        "tags": [
          "sse"
        ],
        "summary": "Sse",
        "operationId": "sse_api_v1_sse_get",
        "parameters": [
          {
            "name": "max_second",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Max Second"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inline-sse": {
      "get": {
        "tags": [
          "sse"
        ],
        "summary": "Inline Sse",
        "operationId": "inline_sse_api_v1_inline_sse_get",
        "parameters": [
          {
            "name": "max_second",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Max Second"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/health": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_api_v1_ai_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/query": {
      "post": {
        "tags": [
          "ai"
        ],
        "summary": "Query Agent",
        "description": "Process a natural language query using the ETL agent with OpenAI.\n\nThis endpoint accepts natural language queries and processes them using\nOpenAI with function calling to execute appropriate ETL operations.",
        "operationId": "query_agent_api_v1_ai_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/capabilities": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Get Capabilities",
        "description": "Get information about the agent's capabilities.\n\nReturns a list of available operations and example queries.",
        "operationId": "get_capabilities_api_v1_ai_capabilities_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/": {
      "get": {
        "tags": [
          "ai"
        ],
        "summary": "Root",
        "description": "Root endpoint with basic service information.",
        "operationId": "root_api_v1_ai__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Health check message"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Service version"
          },
          "etl_service_healthy": {
            "type": "boolean",
            "title": "Etl Service Healthy",
            "description": "Whether the ETL service is accessible"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message",
          "version",
          "etl_service_healthy"
        ],
        "title": "HealthResponse",
        "description": "Response model for health check."
      },
      "QueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Natural language query for the ETL agent"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Optional user ID for the request"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "QueryRequest",
        "description": "Request model for natural language queries."
      },
      "QueryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the query was successful"
          },
          "output": {
            "type": "string",
            "title": "Output",
            "description": "The agent's response to the query"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if query failed"
          },
          "request_id": {
            "type": "string",
            "title": "Request Id",
            "description": "Unique identifier for this request"
          }
        },
        "type": "object",
        "required": [
          "success",
          "output",
          "request_id"
        ],
        "title": "QueryResponse",
        "description": "Response model for query results."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}